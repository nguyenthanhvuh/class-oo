#+TITLE: SWE 619 In Class Exercise Number 3A

#+HTML_HEAD: <link rel="stylesheet" href="https://nguyenthanhvuh.github.io/files/org.css">
#+HTML_HEAD: <link rel="stylesheet" href="https://nguyenthanhvuh.github.io/files/org-orig.css">

* Instructions
  

  Consider Liskov's immutable =Poly= example, where an abstract =Poly= is defined as $c_0 + c_1x + c_2x^2 + \dots$, and is implemented with one variable:

  #+begin_src java
    private Map<Integer, Integer> map;
  #+end_src
   

  Fill in example values that are mapped by the abstraction function.

  #+begin_src text

    Abstract State: Poly

    AF
    /|\
     |
     |
     |
     |----------------------------------------------------------
     |
     |
     |
     |



    Representation State: map

  #+end_src

  1. Identify representation states that should not be mapped.
  1. Try to capture these states with a rule (that is, a rep-invariant).
  1. Consider implementing the =degree()= method. What code would do the job? What more specific type of map would make the implementation simpler? 



* Links
  - [[./index.html][Syllabus]]
  - [[./schedule.html][Schedule]]

