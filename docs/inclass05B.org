#+TITLE: SWE 619 In Class Exercise Number 5B

#+HTML_HEAD: <link rel="stylesheet" href="https://nguyenthanhvuh.github.io/files/org.css">
#+HTML_HEAD: <link rel="stylesheet" href="https://nguyenthanhvuh.github.io/files/org-orig.css">

* Instructions
  Consider the following:

  #+begin_src java

    class A:
        public void reduce (Reducer x)    
            // Effects: if x is null throw NPE 
            // else if x is not appropriate for this throw IAE
            // else reduce this by x

            class B:
            public void reduce (Reducer x) 
            // Requires: x is not null
            // Effects: if x is not appropriate for this throw IAE
            // else reduce this by x

            class C:
            public void reduce (Reducer x)   
            // Effects: if x is null return (normally) with no change to this
            // else if x is not appropriate for this throw IAE
            // else reduce this by x
  #+end_src

  Analyze the "methods rule" for =reduce()= in each of these cases: Note: Some analysis may not be necessary. If so, indicate that.

  #+begin_src text

    B extends A.
    Precondition Part:
    Postcondition Part:
    -----------------------------------          
    C extends A.
    Precondition Part:
    Postcondition Part:
    -----------------------------------          
    A extends B.
    Precondition Part:
    Postcondition Part:
    -----------------------------------          
    C extends B.
    Precondition Part:
    Postcondition Part:
    -----------------------------------                    
    A extends C.
    Precondition Part:
    Postcondition Part: 
    -----------------------------------          
  #+end_src

* Links
  - [[./index.html][Syllabus]]
  - [[./schedule.html][Schedule]]

