#+TITLE: SWE 619 In Class Exercise Number 2B

#+HTML_HEAD: <link rel="stylesheet" href="https://nguyenthanhvuh.github.io/files/org.css">
#+HTML_HEAD: <link rel="stylesheet" href="https://nguyenthanhvuh.github.io/files/org-orig.css">

* Instructions
  Consider Liskov's Poly example, where an abstract Poly is defined as $c_0 + c_1x + c_2x^2 + \dots$, and is implemented with two variables:
  #+begin_src java
    private int deg;
    private int[] trms;
  #+end_src

  #+begin_src text
    Fill in example values that are mapped by the abstraction function.
    Abstract Poly State:


    What is a "state"?
    A "state" is an assigment of values to variables


    AF
    /|\
    |         5 + 3x^2
    |
    |
    |----------------------------------------------------------
    |
    |
    |
    |        (-10, null)

    (2, [5,0,3,0])  Liskov says "no"

    (2, [5,0,3])  Liskov says "yes"


    The "rep-invariant" describes which rep states are "yes"
    1) trms != null
    2) deg >= 0
    3) deg = trms.length - 1
    4) and more - see Liskov

    The rep-invariant defines the domain of the abstraction function



    Representation State: (deg, trms)
  #+end_src
  
  1. Identify representation states that should not be mapped.
  1. Try to capture these states with a rule (that is, a rep-invariant).
  1. Devise a representation that is suitable for a mutable version of Poly.
  1. Develop a rep-invariant for that representation.

* Links
  - [[./index.html][Syllabus]]
  - [[./schedule.html][Schedule]]

